{"version":3,"sources":["script.js"],"names":["showPage","data","dataElm","preferedLang","navigator","language","userLanguage","innerHTML","parse","text","anchors","document","querySelectorAll","l","i","host","port","getWikiPage","pageId","httpAddr","headers","Headers","fetch","then","json","append","Error","resp","warn","error","info","code","message","catch","err","console","stack","slideIn","elm","childNodes","timeoutArrIn","item","ndx","arr","promises","contains","firstChild","Promise","resolve","reject","classList","timeoutArrOut","shift","remove","setTimeout","clearTimeout","log","cycle","pop","a","add","length","push","showData","pageid","mediaBoxElm","createElement","title","titleElm","thumbnail","mediaBoxContainerElm","width","thumbnailSource","source","thumbnailWidth","imageElm","thumbnailHeight","src","terms","extract","description","extractElm","appendChild","searchWikiData","phrase","query","pages","clearData","search","result","formInput","replace","searchPhrase","userInput","cleanInput","Object","querySelector","value","group","all","concat","_toConsumableArray","groupEnd","searchRandom","forEach","delayMethod","window","time","debounce","func","context","args","timeout","now","later","t","label","callback","submitBtnElm","wait","delayFnOnInput","addEventListener","randomBtnElm","target","apply","inputElm","e"],"mappings":"sJAIA,SAAAA,SAAAC,EAAAC,GAKE,IAAMC,EAAeC,UAAUC,UAAYD,UAAUE,aAHvDJ,EAAAK,UAAAN,EAAAO,MAAAC,KAAA,MAAAR,EAAAO,MAAAC,KAGE,IAAMN,IAFRO,EAAAC,SAAAC,iBAAA,KAEQT,EAAAA,EAAAA,EAAeC,EAAAA,OAAUC,EAAVQ,EAAsBT,IAErCM,UAAUC,KAAAA,EAASC,GAAAA,YAKrBF,EAAQI,GAAGC,KAAUZ,EAArB,iBAHJO,EAASI,GAAJE,KAAeN,KAOrB,SAAAO,YAAAC,GAKC,IAHFC,EAAAA,YAGuBf,UAAUC,UAAYD,UAAUE,cAHvD,4EAAAY,EAAA,YACAE,EAAA,IAAAC,QACAD,EAASH,OAAAA,iBAAoB,eAC3BK,MAAMnB,GAAAA,QAAAA,IACNoB,KAAMJ,SAAAA,GACAC,GAAAA,EAAAA,GAAU,OAAIC,EAApBG,OACAJ,MAAQK,IAARC,MAAQD,uCAARP,KAGIK,KAAII,SAAAA,GACJ,GAAM1B,EAAIyB,MAGNzB,MADLsB,QAAKK,KAAC3B,EAAS4B,MAAAC,OACLD,KAAO5B,EAAA4B,MAAAE,KAAAC,QAAA/B,EAAA4B,MAAAC,MAAhB9B,SAGOC,EADSA,SAAW8B,cAAe9B,sBAIzCgC,MAAA,SAAAC,GAAA,OAAAC,QAAAN,OAAAK,EAAAH,MAAA,IAAA,IAAAG,EAAAF,QAAA,IAAAE,EAAAE,MAAA,OAKP,SAAAC,QAAAC,GACA,GAAAA,EAAAC,WAAA,CACA,IAAAC,KACSH,KACCE,KAgCH,OA/BHD,EAAME,WAAAA,QAAN,SAAAC,EAAAC,EAAAC,GAEMC,EAAAA,UAANC,SAAA,qBACIN,QAAAA,IAAAA,mBAAoBE,MAApBF,WAAuCE,EAAAK,WAAAvC,UAAvCgC,cACFK,EAAAF,GAAA,IAAAK,QAAA,SAAAC,EAAAC,GACIR,IAAKS,EAAAA,WAAUL,WACjBV,aAAAgB,EAAAC,SACAR,EAASF,UAAOW,OAAIN,oBAClBC,EAAUM,OACRC,GAAAA,GACAd,EAAKS,KAAUG,OAKlBlB,QARDqB,IAQC,mBARDC,MAQC,WARDhB,EAAAK,WAAAvC,UAQC,eAVHqC,EAWOF,GAAA,IAAAK,QAAA,SAAAC,EAAAC,GACLd,IAAQqB,EAARF,WAAA,WACAV,aAAgBJ,EAAYkB,OAC1BjB,EAAMkB,UAAIL,IAAW,qBACnBC,IAAAA,EAAAA,WAAaf,WACbC,aAAemB,GAEbL,EAAAA,UAAAF,OAAA,sBACA,KACAZ,EAAKS,OAHP,IAAUP,EAAAkB,OAAVnB,IAKAM,EAAQc,KAARH,QAILf,GAWP,SAAAmB,SAAA9D,EAAAC,GACA,IAAAgB,EAAAjB,EAAA+D,OAEQ9C,EAASjB,EAAK+D,MACpBC,EAAAtD,SAAAuD,cAAA,OACMC,EAAaA,SAAnBD,cAAA,MACAE,EAAMH,UAActD,EACpByD,EAAMA,UAAWzD,IAAAA,oBACjByD,EAAS7D,YAAY4D,GAErBF,IAAAA,EAAwBG,SAAxBF,cAAA,OAGA,GAAIjE,EAAKoE,UAAW,CADpB,IAAMC,EAAAA,EAAuB3D,UAASuD,OAClCjE,EAAgBA,EAAAoE,UAAAE,MACZC,EAAkBvE,EAAKoE,UAAUI,OACjCC,EAAAA,SAAsBL,cAAUE,OACtCI,EAAMC,IAAAA,EACND,EAAMA,OAAWhE,EACjBgE,EAASE,MAAML,EAEfG,EAAiBD,YAAjBC,GAGD,GAAA1E,EAAA6E,MAAA,CAGC,IAAMC,EAAU9E,EAAK6E,MAAME,YAAY,GADrC/E,EAAYU,SAAAuD,cAAA,KACde,EAAMF,UAAeD,EACrBG,EAAMA,UAAatE,IAAAA,mBACnBsE,EAAAC,YAAAD,GAGDhB,EAAAf,UAAAU,IAAA,aAGDK,EAAYf,UAAUU,IAAI,oBAD1BK,EAAAf,UAA0BU,IAAA,wBAE1BU,EAAAA,YAAqBpB,GAGrBhD,EAAQgF,YAAYjB,GAApB/D,EAAQgF,iBAAYjB,QAApB,WAGEhD,YAAYC,KAEf,SAAAiE,eAAAC,GAGC,OAAO,IAAIrC,QAAS,SAACC,EAASC,GADvBkC,SAAeC,cAAQ,mBAAhC,IAmBIjE,EAAAA,YAlBkBf,UAAC4C,UAAD5C,UAAqBE,cAkBvC,2UA2BM8E,EA3BN,oEA+BMjD,EAAA,IAAalC,QACbmB,EAAAK,OAAA,iBAAA,eACAH,MAAAH,GAAcC,QAAAA,IAHTG,KAAA,SAIAI,GAELqB,GADAb,QAAAqB,IAAA,0BAAAC,OACAT,EAAQ/C,GAAKoF,OAAMC,EAAX9D,OACR,MAAA,IAAAE,MAAA,kCAAA0D,EAAA,OAEA7D,KAAA,SAAAtB,GACA,GAAAA,EAAA4B,MArBN,MAsBKM,QAAAP,KAAA3B,EAAA4B,MAAAC,OAtBLC,KAAA9B,EAAA4B,MAAAE,KAAAC,QAAA/B,EAAA4B,MAAAC,MAyBS,IAAA7B,EAAAoF,QAAApF,EAAAoF,MAAAC,MA9DX,MA8DWnD,QAAOc,KAAAhD,EAAPoF,QA9DXtD,KAAA,aAAAC,QAAAA,yBAAAoD,GAkEOG,EAATtF,EAAmBC,MAASoF,OAAArF,EAAAoF,MAAAG,UAQpBC,MAAAA,SAAAA,GAAAA,OAASC,EAAUC,OAIzB,SAAOF,UAAPvF,GACD,KAAAA,EAAA4C,YAXGX,QAAQqB,IAAR,kBAA8BC,MAA9B,YAA+CvD,EAAQ4C,WAAWA,WAAWvC,WAajFL,EAAS0F,YAAe1F,EAAA4C,YAItB,SAAM+C,WAAYC,GAMdP,OALJG,EAAAC,QAAA,2CAAA,IASII,SAAAA,eACEhC,IAAAA,EAAS9D,SAAYC,cAArB,mBAIFiC,EAAA2D,WALAnF,SAAAqF,cAAA,gBAKAC,OAED9D,QAbH+D,MAaG,SAbHzC,OAcEtB,QAAAqB,IAAA,wDAAAC,OACAV,QAAAoD,KAAAhB,eAAAU,IAAAO,OAAAC,mBAAAhE,QAAAnC,MACAqB,KAAA,SAAAtB,GAEFkC,OADEoD,UAAArF,GACMoG,EAAR,KAbG/E,KAAK,SAACtB,GAgBX8F,OAASQ,KAAAA,GAAeC,QAEvB,SAAA/D,GAhBOsB,SAAS9D,EAAKwC,GAAOvC,OAoB7BqB,KAAA,WACAY,QAASsE,IAAT,kDAA4ChD,OACtCpB,QAAOqE,KAMVvE,QAAEwE,SAAF,SAFDlD,OAKF,SAASmD,gBAOHC,SAAAA,YAAWC,EAASC,EAApBJ,QAFF,IAAAD,OAAAD,cAAAC,OAAAD,gBAIAlD,YAAAA,GAAayD,KAAbC,MACAD,QAAAA,IAAAA,GAAU1D,YAAW4D,IACtB,IATDC,EAAAV,YAAAW,GAUD9D,WAAA,WAhBOmD,YAAYW,KAAWD,GAAGE,KAmB5BC,GAAAA,KAGN,SAAI7D,SAAJoD,EAAAU,GACA,IAAMC,OAAAA,EAjBJ,OAAO,WAmBTF,IAAAA,EAAaG,KACbC,EAAaD,UAKXD,aAAAA,GACA/D,EAAAA,WALOgE,WACPtF,EAAcwF,KACdd,EAAAe,MAAAd,EAAAC,IAGAtD,IAbF,IAAM6D,aAAe3G,SAASqF,cAAc,oBACtC0B,aAAe/G,SAASqF,cAAc,oBACtC6B,SAAWlH,SAASqF,cAAc,gBACpCvC,MAAQ,EACN+D,eAAiBZ,SAAShB,aAAc,KAAK,GAEnD0B,aAAaG,iBAAiB,QAAS7B,cACvC8B,aAAaD,iBAAiB,QAASlB,cACvCsB,SAASJ,iBAAiB,QAAS,SAACK,GAClC3F,QAAQqB,IAAIsE,EAAEH,OAAO1B,OAGrBuB,iBACA/D","file":"script.js","sourcesContent":["// TODO: fix address bar - remove submit parameters from it;\n// TODO: clear the page if the input value is undefined;\n// TODO: Speed up the load and displaying the data;\n// TODO: Limit the keys to react at only to meaningful - letters and control;\n// TODO: make backspace return a user to the previous page (now it just completely leave the page);\n\n// showPage adds a page content to a given DOM element.\n// It replaces all relative links in the page with Wikipedia domain prefixed.\nfunction showPage(data, dataElm) {\n  const preferedLang = navigator.language || navigator.userLanguage;\n  dataElm.innerHTML = data.parse.text['*'] || data.parse.text;\n  const anchors = document.querySelectorAll('a');\n\n  for (let i = 0, l = anchors.length; i < l; i++) {\n    // console.log(anchors[i]);\n    if (/wiki|w/g.test(anchors[i].pathname)) {\n      anchors[i].host = `${preferedLang}.wikipedia.org`;\n      anchors[i].port = 443;\n    }\n  }\n}\n\n// getWikiPage retrieves wiki page with a given pageID content from Wikimedia engine.\n// It uses browser settings to retrieve data according to user prefered language. \nfunction getWikiPage(pageId) {\n  const preferedLang = navigator.language || navigator.userLanguage;\n  const httpAddr = `https://${preferedLang}.wikipedia.org/w/api.php?action=parse&format=json&formatversion=2&pageid=${pageId}&origin=*`;\n  const headers = new Headers();\n  headers.append('Api-User-Agent', 'Example/1.0');\n  fetch(httpAddr, { headers })\n    .then((resp) => {\n      if (resp.ok) return resp.json();\n      throw new Error(`Error while retrieving page with id ${pageId}`);\n    })\n    .then((data) => {\n      if (data.error) {\n        console.warn(data.error.info);\n        throw { code: data.error.code, message: data.error.info };\n      } else {\n        const dataElm = document.querySelector('.external__data');\n        showPage(data, dataElm);\n      }\n    })\n    .catch(err => console.error(`${err.code || ''} ${err.message} ${err.stack})`))\n}\n\n// slideIn used for visual effect of sliding elements from top to appear\n// and to bottom to disappear.\n// Uses parent element as a parameter and do the magic on all childelements\nfunction slideIn(elm) {\n  if (elm.childNodes) {\n    const timeoutArrIn = [];\n    const timeoutArrOut = [];\n    const promises = [];\n    elm.childNodes.forEach((item, ndx, arr) => {\n      // console.log(item.classList);\n      if (item.classList.contains('--slide-from-top')) {\n        console.log(`slideIn:, cycle=${cycle}, move '${item.firstChild.innerHTML}' from top`);\n        promises[ndx] = new Promise((resolve, reject) => {\n          const a = setTimeout(() => {\n            clearTimeout(timeoutArrOut.shift());\n            item.classList.remove('--slide-from-top');\n            resolve('Ok');\n          }, (ndx) * 30);\n          timeoutArrOut.push(a);\n\n        });\n      } else {\n        console.log(`slideIn:, cycle=${cycle}, move '${item.firstChild.innerHTML}' to bottom`);\n        promises[ndx] = new Promise((resolve, reject) => {\n          const a = setTimeout(() => {\n            clearTimeout(timeoutArrIn.pop());\n            item.classList.add('--slide-to-bottom');\n            const b = setTimeout(() => {\n              clearTimeout(b);\n              // item.classList.add('--slide-from-top');\n              item.classList.remove('--slide-to-bottom');\n            }, 300);\n            resolve('Ok');\n          }, (arr.length - ndx) * 30);\n          timeoutArrIn.push(a);\n        });\n      }\n    });\n    return promises;\n  }\n}\n\n// showData takes the data received from Wikipedia search engine\n// and insert it into given DOM element. \n// It expects 'data' object to consist:\n//    pageID - wiki page id;\n//    title - page title;\n//    thumbnail - title picture of the page;\n//    description - short extract from the article;\nfunction showData(data, dataElm) {\n  const pageId = data.pageid;\n  // console.log(pageId);\n  const title = data.title;\n  const mediaBoxElm = document.createElement('div');\n  const titleElm = document.createElement('h2');\n  titleElm.innerHTML = title;\n  titleElm.classList.add('media-box__title');\n  mediaBoxElm.appendChild(titleElm);\n\n  const mediaBoxContainerElm = document.createElement('div');\n  if (data.thumbnail) {\n    const thumbnailSource = data.thumbnail.source;\n    const thumbnailWidth = data.thumbnail.width;\n    const thumbnailHeight = data.thumbnail.height;\n    const imageElm = document.createElement('img');\n    imageElm.src = thumbnailSource;\n    imageElm.height = thumbnailHeight;\n    imageElm.width = thumbnailWidth;\n    // imageElm.classList.add('media-box__image');\n    mediaBoxContainerElm.appendChild(imageElm);\n  }\n\n  if (data.terms) {\n    const extract = data.terms.description[0];\n    const extractElm = document.createElement('p');\n    extractElm.innerHTML = extract;\n    extractElm.classList.add('media-box__text');\n    mediaBoxContainerElm.appendChild(extractElm);\n  }\n\n  mediaBoxElm.classList.add('media-box');\n  mediaBoxElm.classList.add('--slide-from-top');\n  mediaBoxContainerElm.classList.add('media-box__container');\n\n  mediaBoxElm.appendChild(mediaBoxContainerElm);\n  dataElm.appendChild(mediaBoxElm);\n\n  mediaBoxElm.addEventListener('click', () => {\n    getWikiPage(pageId);\n  });\n}\n\nfunction searchWikiData(phrase) {\n  return new Promise ((resolve, reject) => {\n    const dataElm = document.querySelector('.external__data');\n    const preferedLang = navigator.language || navigator.userLanguage;\n    // let httpAddr = `https://${preferedLang}.wikipedia.org/w/api.php?action=query&format=json&prop=extracts%7Cpageimages%7Crevisions&titles=${phrase}&redirects=1&formatversion=2&exsentences=2&exintro=1&explaintext=1&piprop=thumbnail&pithumbsize=300&rvprop=timestamp&origin=*`;\n    // let httpAddr = `https://${preferedLang}.wikipedia.org/w/api.php?action=query&format=json&uselang=user&prop=extracts%7Cpageimages&list=search&redirects=1&formatversion=2&exsentences=2&exintro=1&explaintext=1&piprop=thumbnail&pithumbsize=300&piprop=thumbnail&pithumbsize=300&srsearch=${phrase}&srlimit=10&origin=*`;\n    //   let httpAddr = `https://${preferedLang}.wikipedia.org/w/api.php?\n    //       action=query&\n    //       format=json&\n    //       uselang=user&\n    //       prop=pageimages%7Cextracts&list=&\n    //       generator=search&\n    //       redirects=1&\n    //       formatversion=2&\n    //       piprop=thumbnail&\n    //       pithumbsize=300&\n    //       exsentences=2&\n    //       exintro=1&\n    //       explaintext=1&\n    //       gsrsearch=${phrase}&\n    //       origin=*`;\n    const httpAddr = `https://${preferedLang}.wikipedia.org/w/api.php?\n        action=query&\n        format=json&\n        generator=prefixsearch&\n        prop=pageprops%7Cpageimages%7Cpageterms&\n        redirects=&\n        ppprop=displaytitle&\n        piprop=thumbnail&\n        pithumbsize=80&\n        pilimit=6&\n        wbptterms=description&\n        gpssearch=${phrase}&\n        gpsnamespace=0&\n        gpslimit=6&\n        origin=*`;\n    const headers = new Headers();\n    headers.append('Api-User-Agent', 'Example/1.0');\n    fetch(httpAddr, { headers })\n      .then((resp) => {\n        console.log(`fetched data for cycle=${cycle}`);\n        if (resp.ok) return resp.json();\n        throw new Error(`Could not get the Wikipage for ${phrase}!`);\n      })\n      .then((data) => {\n        if (data.error) {\n          console.warn(data.error.info);\n          throw { code: data.error.code, message: data.error.info };\n          // } else if (!data.query || !data.query.search || !data.query.pages || data.query.pages[0].missing) {\n        } else if (!data.query || !data.query.pages) {\n          console.warn(data.query);\n          // console.log(data);\n          throw { code: 'NoSuchPage', message: `There is no pages for ${phrase}` }\n        } else {\n          // console.log(data.query.pages);\n          resolve(data.query.pages || data.query.search);\n          // const pages = data.query.pages || data.query.search;\n          // Object.keys(pages).forEach((item) => {\n          //   showData(pages[item], dataElm);\n          // });\n        }\n      })\n      // .catch(err => console.error(`${err.code || ''} ${err.message} ${err.stack})`));\n      .catch(err => reject(err));\n  });\n}\n\nfunction clearData(dataElm) {\n  while (dataElm.firstChild) {\n    console.log(`removal: cycle=${cycle}, elm is ${dataElm.firstChild.firstChild.innerHTML}`);\n    (dataElm.removeChild(dataElm.firstChild));\n  }\n}\n\nfunction cleanInput(formInput) {\n  const result = formInput.replace(/([.,;:=+[\\]\\\\|\\/?<>!@#$%\\^\\&*()'\"\\n\\r])/g, '');\n  // twitter's unicode letters and marks regexp\n  // from here - https://github.com/twitter/twitter-text/blob/master/js/twitter-text.js\n  // const bmpLetterAndMarks = new RegExp(/A-Za-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0300-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u0483-\\u052f\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0610-\\u061a\\u0620-\\u065f\\u066e-\\u06d3\\u06d5-\\u06dc\\u06df-\\u06e8\\u06ea-\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710-\\u074a\\u074d-\\u07b1\\u07ca-\\u07f5\\u07fa\\u0800-\\u082d\\u0840-\\u085b\\u08a0-\\u08b2\\u08e4-\\u0963\\u0971-\\u0983\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bc-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09ce\\u09d7\\u09dc\\u09dd\\u09df-\\u09e3\\u09f0\\u09f1\\u0a01-\\u0a03\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a59-\\u0a5c\\u0a5e\\u0a70-\\u0a75\\u0a81-\\u0a83\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abc-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ad0\\u0ae0-\\u0ae3\\u0b01-\\u0b03\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3c-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5c\\u0b5d\\u0b5f-\\u0b63\\u0b71\\u0b82\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd0\\u0bd7\\u0c00-\\u0c03\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c58\\u0c59\\u0c60-\\u0c63\\u0c81-\\u0c83\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbc-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0cde\\u0ce0-\\u0ce3\\u0cf1\\u0cf2\\u0d01-\\u0d03\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4e\\u0d57\\u0d60-\\u0d63\\u0d7a-\\u0d7f\\u0d82\\u0d83\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e01-\\u0e3a\\u0e40-\\u0e4e\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb9\\u0ebb-\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0ec8-\\u0ecd\\u0edc-\\u0edf\\u0f00\\u0f18\\u0f19\\u0f35\\u0f37\\u0f39\\u0f3e-\\u0f47\\u0f49-\\u0f6c\\u0f71-\\u0f84\\u0f86-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u103f\\u1050-\\u108f\\u109a-\\u109d\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u135d-\\u135f\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16f1-\\u16f8\\u1700-\\u170c\\u170e-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176c\\u176e-\\u1770\\u1772\\u1773\\u1780-\\u17d3\\u17d7\\u17dc\\u17dd\\u180b-\\u180d\\u1820-\\u1877\\u1880-\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1920-\\u192b\\u1930-\\u193b\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a1b\\u1a20-\\u1a5e\\u1a60-\\u1a7c\\u1a7f\\u1aa7\\u1ab0-\\u1abe\\u1b00-\\u1b4b\\u1b6b-\\u1b73\\u1b80-\\u1baf\\u1bba-\\u1bf3\\u1c00-\\u1c37\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1cd0-\\u1cd2\\u1cd4-\\u1cf6\\u1cf8\\u1cf9\\u1d00-\\u1df5\\u1dfc-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u20d0-\\u20f0\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2183\\u2184\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d7f-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2de0-\\u2dff\\u2e2f\\u3005\\u3006\\u302a-\\u302f\\u3031-\\u3035\\u303b\\u303c\\u3041-\\u3096\\u3099\\u309a\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua672\\ua674-\\ua67d\\ua67f-\\ua69d\\ua69f-\\ua6e5\\ua6f0\\ua6f1\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua7ad\\ua7b0\\ua7b1\\ua7f7-\\ua827\\ua840-\\ua873\\ua880-\\ua8c4\\ua8e0-\\ua8f7\\ua8fb\\ua90a-\\ua92d\\ua930-\\ua953\\ua960-\\ua97c\\ua980-\\ua9c0\\ua9cf\\ua9e0-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa36\\uaa40-\\uaa4d\\uaa60-\\uaa76\\uaa7a-\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaef\\uaaf2-\\uaaf6\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab5f\\uab64\\uab65\\uabc0-\\uabea\\uabec\\uabed\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf870-\\uf87f\\uf882\\uf884-\\uf89f\\uf8b8\\uf8c1-\\uf8d6\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe00-\\ufe0f\\ufe20-\\ufe2d\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc/, 'gui');\n  return result;\n}\n\nfunction searchPhrase() {\n  const dataElm = document.querySelector('.external__data');\n  const inputElm = document.querySelector('#searchInput');\n  // TODO: some user input validation stuff\n  const userInput = cleanInput(inputElm.value);\n  // console.log(userInput);\n  console.group(`Cycle_${cycle}`);\n  console.log(`First slideIn, searchPhrase cleaning phase for cycle=${cycle}`);\n  Promise.all([searchWikiData(userInput), ...slideIn(dataElm)])\n    .then((data) => {\n      clearData(dataElm);\n      return data[0];\n    })\n    .then((data) => {\n      Object.keys(data).forEach((item) => {\n        showData(data[item], dataElm);\n      });\n    })\n    .then(() => {\n      console.log(`Second slideIn inside searchWikiData for cycle=${cycle}`);\n      slideIn(dataElm);\n    })\n    // .then(() => {\n    //   console.log('Finished with cleaning, search is the next step')\n    //   searchWikiData(userInput);\n    // });\n  console.groupEnd(`Cycle_${cycle}`);\n}\n\nfunction searchRandom() {\n\n}\n\n// delayMethod - delay function execution for a given period of time\n// here is used to wait for a user input interruption to get data by fetch().\n// source - https://stackoverflow.com/a/30503848/2255031\nfunction delayMethod(label, callback, time) {\n  if (typeof window.delayMethod === 'undefined') window.delayMethod = {};\n  delayMethod[label] = Date.now();\n  console.log(`${delayMethod[label]}`);\n  const t = delayMethod[label];\n  setTimeout(() => {\n    if (delayMethod[label] === t) callback();\n  }, time || 500);\n}\n\nfunction debounce(func, wait) {\n  let timeout;\n  return function() {\n    const context = this;\n    const args = arguments;\n    const later = function() {\n      timeout = null;\n      func.apply(context, args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n}\n\n\nconst submitBtnElm = document.querySelector('#searchBtnSubmit');\nconst randomBtnElm = document.querySelector('#searchBtnRandom');\nconst inputElm = document.querySelector('#searchInput');\nlet cycle = 1;\nconst delayFnOnInput = debounce(searchPhrase, 250, false);\n\nsubmitBtnElm.addEventListener('click', searchPhrase);\nrandomBtnElm.addEventListener('click', searchRandom);\ninputElm.addEventListener('keyup', (e) => {\n  console.log(e.target.value);\n  // e.preventDefault();\n  // debounce(searchPhrase(), 2000, true);\n  delayFnOnInput();\n  cycle++;\n});\n"],"sourceRoot":"/source/"}