{"version":3,"sources":["script.js"],"names":["localSpace","MyError","_ref","_ref$name","name","undefined","_ref$message","message","this","stack","Error","prototype","wrapperElm","firstChild","removeChild","moveUp","inputElm","removeEventListener","searchFormElm","classList","add","remove","randomBtnElm","searchBtnElm","clearData","resetOnEmptySearch","cleanInput","formInput","replace","saveState","pageId","currHref","document","location","href","pageTitle","title","window","history","replaceState","searchValue","value","pushState","slideIn","promises","allChildNodes","childNodes","clearTimeout","timeoutArrIn","timeoutArrOut","l","length","i","arr","contains","Promise","resolve","reject","shift","item","setTimeout","pop","b","push","_loop","showPage","data","innerHTML","parse","text","anchors","pathname","host","preferedLang","port","getPage","httpAddr","Api-User-Agent","fetch","headers","then","resp","ok","json","error","console","warn","info","code","dataElm","catch","err","showData","pageid","mediaBoxElm","createElement","titleElm","appendChild","mediaBoxContainerElm","thumbnail","thumbnailSource","source","thumbnailWidth","width","thumbnailHeight","height","imageElm","terms","extractElm","extract","description","searchWikiData","phrase","numberOfResults","arguments","query","pages","search","searchFallback","wikiAddr","googleAddr","searchPhrase","userInput","all","concat","_toConsumableArray","Object","keys","forEach","querySelector","navigator","userLanguage","slice","delayFnOnInput","func","wait","_len","args","Array","_key","_this","timeout","debounce","context","apply","includes","searchElement","O","len","n","parseInt","k","currentElement","onpopstate","e","state","addEventListener","key","metaKey","keysNotAllowed"],"mappings":"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","file":"script.js","sourcesContent":["/* \n * +TODO: fix address bar - remove submit parameters from it;\n * +TODO: clear the page if the input value is undefined;\n * ~TODO: Speed up the load and displaying the data;\n * +TODO: Limit the keys to react at only to meaningful - letters and control;\n * +TODO: fix backspace to return a user to the previous page \n *        (now it just completely leave the page);\n * ~TODO: add initial fetch to establish connection with wiki; \n *        it seems to make following requests faster;\n * +TODO: fix images size - it's too crane;\n * +TODO: add user error message on no results;\n */\n\n\n/* eslint-env es6 */\n/* eslint func-names: ['error', 'never'] */\n/* eslint no-plusplus: [\"error\", { \"allowForLoopAfterthoughts\": true }] */\n/* eslint no-param-reassign: [\"error\", { \"props\": false }] */\n\nconst localSpace = (function () {\n  /*\n   * Constants\n   */\n  const searchFormElm = document.querySelector('.search');\n  const searchBtnElm = document.querySelector('#searchBtnSubmit');\n  const randomBtnElm = document.querySelector('#searchBtnRandom');\n  const inputElm = document.querySelector('#searchInput');\n  const dataElm = document.querySelector('.external__data');\n  const preferedLang = (navigator.language || navigator.userLanguage).slice(0, 2);\n  const keysNotAllowed = ['Meta', 'Alt', 'CapsLock', 'Shift', 'Control', 'Tab', 'Escape',\n    'F1', 'F2', 'F3', 'F4', 'F5', 'F6', 'F7', 'F8', 'F9', 'F10', 'F11', 'F12'];\n\n  /*\n  * debounce(func, wait) \n  * delays function execution for a given period of time\n  * @param {Obj} func\n  * @param {Int} wait\n  */\n  function debounce(func, wait, ...args) {\n    let timeout;\n    return () => {\n      const context = this;\n      const later = () => {\n        timeout = null;\n        func.apply(context, args);\n      };\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  }\n  const delayFnOnInput = debounce(searchPhrase, 250, false);\n\n  /*\n   * Array.include() polyfill for Safary 7\n   */\n  if (![].includes) {\n    Array.prototype.includes = function(searchElement/*, fromIndex*/) {\n      const O = Object(this);\n      const len = parseInt(O.length) || 0;\n      if (len === 0) {\n        return false;\n      }\n      const n = parseInt(arguments[1]) || 0;\n      let k;\n      if (n >= 0) {\n        k = n;\n      } else {\n        k = len + n;\n        if (k < 0) {\n          k = 0;\n        }\n      }\n      while (k < len) {\n        const currentElement = O[k];\n        if (searchElement === currentElement ||\n            (searchElement !== searchElement && currentElement !== currentElement)\n        ) {\n          return true;\n        }\n        k += 1;\n      }\n      return false;\n    };\n  }\n\n  /*\n   * MyError(name, message)\n   * Custom error object with additional parameters\n   * @param {String} name\n   * @param {String} message\n   * @return None\n   * source - https://stackoverflow.com/a/5251506/2255031\n   */\n  function MyError({\n    name = 'CustomError',\n    message = 'An error occured',\n  }) {\n    this.name = name;\n    this.message = message;\n    this.stack = (new Error()).stack;\n  }\n  MyError.prototype = new Error();\n\n  /*\n  * clearData(dataElm)\n  * Clear all children of the given DOM element\n  * @param {Obj} obj\n  * @return None\n  */\n  function clearData(wrapperElm) {\n    while (wrapperElm.firstChild) {\n      (wrapperElm.removeChild(wrapperElm.firstChild));\n    }\n  }\n\n  /*\n   * moveUp() \n   * Lift the search bar to the top of the screen with minor transform\n   * @param None\n   * @return None\n   * \n   */\n  function moveUp() {\n    inputElm.removeEventListener('keyup', moveUp);\n    searchFormElm.classList.add('search--upper');\n    searchFormElm.classList.remove('search--middle');\n    inputElm.classList.remove('search__input--middle');\n    randomBtnElm.classList.remove('search__btn--middle');\n    searchBtnElm.classList.remove('search__btn--middle');\n  }\n\n  /*\n   * resetOnEmptySearch() \n   * Conditional clearance of the search results\n   */\n  function resetOnEmptySearch() {\n    if (inputElm.value.length === 0) {\n      // console.log('insie resetOnEmptySearch');\n      // inputElm.addEventListener('keyup', moveUp);\n      // searchFormElm.classList.add('search--middle');\n      // searchFormElm.classList.remove('search--upper');\n      // inputElm.classList.add('search__input--middle');\n      // randomBtnElm.classList.add('search__btn--middle');\n      clearData(dataElm);\n    }\n  }\n\n  /*\n  * cleanInput(formInput) \n  * sanitizes user input\n  * @param {String} formInput\n  * @return {String}\n  */\n  function cleanInput(formInput) {\n    const result = formInput.replace(/([.,;:=+[\\]\\\\|\\/?<>!@#$%\\^\\&*()'\"\\n\\r])/g, '');\n    // twitter's unicode letters and marks regexp\n    // are here - https://github.com/twitter/twitter-text/blob/master/js/twitter-text.js\n    return result;\n  }\n\n  /*\n  * saveState(pageId) \n  * keeps state of the page in browser history\n  * @param {Int} pageId\n  * @return None\n  * \n  */\n  function saveState(pageId) {\n    const currHref = document.location.href;\n    const pageTitle = document.title;\n    // console.log(`Inside saveState() searchValue is ${inputElm.value}`);\n    window.history.replaceState({ searchValue: inputElm.value, pageTitle }, '', currHref);\n    window.history.pushState({ searchValue: inputElm.value, pageTitle, pageId }, '', currHref);\n  }\n\n  /*\n  * slideIn()\n  * used for visual effect of sliding elements from top to appear\n  * and to bottom to disappear.\n  * Uses parent element as a parameter and do the magic on all childelements\n  */\n  function slideIn(wrapperElm) {\n    let promises = [];\n    const allChildNodes = wrapperElm.childNodes;\n    // console.log(allChildNodes);\n    if (allChildNodes) {\n      const timeoutArrIn = [];\n      const timeoutArrOut = [];\n      // for loop instead of forEach to support Safari 7\n      // wrapperElm.childNodes.forEach((item, ndx, arr) => {\n      for (let i = 0, l = allChildNodes.length; i < l; i++) {\n        const item = allChildNodes[i];\n        const arr = allChildNodes;\n        if (item.classList.contains('--slide-from-top')) {\n          // console.log(`slideIn:, cycle=${cycle}, move '${item.firstChild.innerHTML}' from top`);\n          promises[i] = new Promise((resolve, reject) => {\n            const a = setTimeout(() => {\n              clearTimeout(timeoutArrOut.shift());\n              item.classList.remove('--slide-from-top');\n              resolve('Ok');\n            }, (i) * 30);\n            timeoutArrOut.push(a);\n          });\n        } else {\n          promises[i] = new Promise((resolve, reject) => {\n            const a = setTimeout(() => {\n              clearTimeout(timeoutArrIn.pop());\n              item.classList.add('--slide-to-bottom');\n              const b = setTimeout(() => {\n                clearTimeout(b);\n                item.classList.remove('--slide-to-bottom');\n              }, 300);\n              resolve('Ok');\n            }, (arr.length - i) * 10);\n            timeoutArrIn.push(a);\n          });\n        }\n      }\n    } else promises = [];\n    return promises;\n  }\n\n  /* \n  * showPage()\n  * adds a page content to a given DOM element.\n  * It replaces all relative links in the page with Wikipedia domain prefixed.\n  */\n  function showPage(data, wrapperElm) {\n    wrapperElm.innerHTML = data.parse.text['*'] || data.parse.text;\n    const anchors = document.querySelectorAll('a');\n\n    for (let i = 0, l = anchors.length; i < l; i++) {\n      // console.log(anchors[i]);\n      if (/wiki|w/g.test(anchors[i].pathname)) {\n        anchors[i].host = `${preferedLang}.wikipedia.org`;\n        anchors[i].port = 443;\n        // console.log(resolveLink(anchors[i]))\n      }\n    }\n  }\n\n  /* \n  * getPage()\n  * retrieves wiki page with a given pageID content from Wikimedia engine.\n  * It uses browser settings to retrieve data according to user prefered language. \n  */ \n  function getPage(pageId) {\n    const httpAddr = `https://${preferedLang}.wikipedia.org/w/api.php?action=parse&format=json&formatversion=2&pageid=${pageId}&origin=*`;\n    // const headers = new Headers();\n    // headers.append('Api-User-Agent', 'Example/1.0');\n    const headers = { headers: {\n      'Api-User-Agent': 'Example/1.0',\n    } };\n    fetch(httpAddr, headers)\n      .then((resp) => {\n        if (resp.ok) return resp.json();\n        throw new MyError({ name: 'HTTPError', message: `Error while retrieving page with id ${pageId}` });\n      })\n      .then((data) => {\n        if (data.error) {\n          console.warn(data.error.info);\n          throw new MyError({ name: data.error.code, message: data.error.info });\n        } else {\n          showPage(data, dataElm);\n        }\n      })\n      .catch(err => console.error(`${err.code || ''} ${err.message} ${err.stack})`))\n  }\n\n  /*\n  * showData()\n  * takes the data received from Wikipedia search engine\n  * and insert it into dataElm element. \n  * It expects 'data' object to consist:\n  *    pageID - wiki page id;\n  *    title - page title;\n  *    thumbnail - title picture of the page;\n  *    description - short extract from the article;\n  */\n  function showData(data) {\n    const pageId = data.pageid;\n    const title = data.title;\n    const mediaBoxElm = document.createElement('div');\n    const titleElm = document.createElement('h2');\n    titleElm.innerHTML = title;\n    titleElm.classList.add('media-box__title');\n    mediaBoxElm.appendChild(titleElm);\n\n    const mediaBoxContainerElm = document.createElement('div');\n    if (data.thumbnail) {\n      const thumbnailSource = data.thumbnail.source;\n      const thumbnailWidth = data.thumbnail.width;\n      const thumbnailHeight = data.thumbnail.height;\n      const imageElm = document.createElement('img');\n      imageElm.src = thumbnailSource;\n      imageElm.height = thumbnailHeight;\n      imageElm.width = thumbnailWidth;\n      imageElm.classList.add('media-box__image');\n      mediaBoxContainerElm.appendChild(imageElm);\n    }\n\n    if (data.terms) {\n      const extract = data.terms.description[0];\n      const extractElm = document.createElement('p');\n      extractElm.innerHTML = extract;\n      extractElm.classList.add('media-box__text');\n      mediaBoxContainerElm.appendChild(extractElm);\n    }\n\n    mediaBoxElm.classList.add('media-box');\n    mediaBoxElm.classList.add('--slide-from-top');\n    mediaBoxContainerElm.classList.add('media-box__container');\n\n    mediaBoxElm.appendChild(mediaBoxContainerElm);\n    dataElm.appendChild(mediaBoxElm);\n\n    mediaBoxElm.addEventListener('click', () => {\n      saveState(pageId);\n      getPage(pageId);\n    });\n  }\n\n  /*\n  * searchWikiData(phrase, numberOfResults)\n  * looks for a given number of best fitted results to the phrase\n  * @param {String} phrase\n  * @param {Int} numberOfResults\n  * @return (Object) obj\n  */\n  function searchWikiData(phrase, numberOfResults = 7) {\n    const httpAddr = `https://${preferedLang}.wikipedia.org/w/api.php?\n        action=query&\n        format=json&\n        generator=prefixsearch&\n        prop=pageprops%7Cpageimages%7Cpageterms&\n        redirects=&\n        ppprop=displaytitle&\n        piprop=thumbnail&\n        pithumbsize=80&\n        pilimit=${numberOfResults}&\n        wbptterms=description&\n        gpssearch=${phrase}&\n        gpsnamespace=0&\n        gpslimit=${numberOfResults}&\n        origin=*`;\n    const headers = { headers: {\n      'Api-User-Agent': 'Example/1.0',\n    } };\n    // const headers = new Headers();\n    // headers.append('Api-User-Agent', 'Example/1.0');\n    return fetch(httpAddr, headers)\n      .then((resp) => {\n        // console.log(`fetched data for cycle=${cycle}`);\n        if (resp.ok) return resp.json();\n        throw new Error(`Could not get the Wikipage for ${phrase}!`);\n      })\n      .then((data) => {\n        if (data.error) {\n          console.warn(data.error.info);\n          throw new MyError({ name: data.error.code, message: data.error.info });\n        } else if (!data.query || !data.query.pages) {\n          console.warn('No such page');\n          // searchFallback(phrase);\n          throw new MyError({ name: 'NoSuchPage', message: phrase });\n        } else {\n          return data.query.pages || data.query.search;\n        }\n      })\n      .catch(err => Promise.reject(err));\n  }\n\n  /*\n   * searchFallback(phrase) \n   * Insert into dataElm element additional search engines links when Wiki search fails. \n   * @param {string} phrase\n   * @return None\n   */\n  function searchFallback(phrase) {\n    const wikiAddr = `https://${preferedLang}.wikipedia.org/wiki/Special:Search?search=${phrase}`;\n    const googleAddr = `https://www.google.com/search?q=${phrase}`;\n    dataElm.innerHTML = `<p>There is no article for <em>${phrase}</em>. Try to search with <a href=\"${wikiAddr}\">Wiki</a> or <a href=\"${googleAddr}\">Google</a>.</p>`;\n  }\n\n  /*\n  * searchPhrase() \n  * wraps all elements into asyncronous flud\n  * @params None\n  * @return None\n  */\n  function searchPhrase() {\n    const userInput = cleanInput(inputElm.value);\n    // console.log(`First slideIn, searchPhrase cleaning phase for cycle=${cycle}`);\n    Promise.all([searchWikiData(userInput), ...slideIn(dataElm)])\n      .then((data) => {\n        clearData(dataElm);\n        return data[0];\n      })\n      .then((data) => {\n        Object.keys(data).forEach((item) => {\n          showData(data[item], dataElm);\n        });\n      })\n      .then(() => {\n        // console.log(`Second slideIn inside searchWikiData for cycle=${cycle}`);\n        slideIn(dataElm);\n      })\n      .catch((err) => {\n        // console.log('promise reject cought!');\n        // console.log(err.message);\n        clearData(dataElm);\n        if (err.name === 'NoSuchPage') searchFallback(err.message);\n      });\n  }\n\n  /*\n  * searchRandom() \n  * looks for a random Wiki article\n  * @params None\n  * @return None\n  */\n  function searchRandom() {\n    const httpAddr = `https://${preferedLang}.wikipedia.org/w/api.php?\n        action=query&\n        format=json&\n        generator=random&\n        rnnamespace=1&\n        origin=*`;\n    // const headers = new Headers();\n    // headers.append('Api-User-Agent', 'Example/1.0');\n    const headers = { headers: {\n      'Api-User-Agent': 'Example/1.0',\n    } };\n    return fetch(httpAddr, headers)\n      .then((resp) => {\n        if (resp.ok) return resp.json();\n        throw new Error('Could not get a random Wikipage!');\n      })\n      .then((data) => {\n        if (data.error) {\n          console.warn(data.error.info);\n          throw new Error({ name: data.error.code, message: data.error.info });\n        } else if (!data.query || !data.query.pages) {\n          console.warn(data.query);\n          // searchFallback(phrase);\n          throw new Error({ name: 'NoSuchPage', message: 'There is no pages found' });\n        } else {\n          return data.query.pages;\n        }\n      })\n      .then((data) => {\n        const pageid = Object.keys(data)[0];\n        moveUp();\n        saveState(pageid);\n        getPage(pageid);\n      })\n      .catch(err => Promise.reject(err));\n  }\n\n  /*\n   * Provide history handler routine\n   */\n  window.onpopstate = (e) => {\n    if (e.state.searchValue) {\n      // console.log(e.state);\n      clearData(dataElm);\n      moveUp();\n      inputElm.value = e.state.searchValue;\n      document.title = e.state.pageTitle;\n      if (e.state.pageId) {\n        // console.log(e.state.pageId);\n        getPage(e.state.pageId);\n      } else {\n        // if (searchPhrase) console.log('searchPhrase exists');\n        // else console.log('searchPhrase doesn\\'t exists');\n        searchPhrase();\n      }\n    }\n  };\n\n  searchBtnElm.addEventListener('click', () => {\n    if (!inputElm.length) {\n      // console.log('inside clearing phase on keyboard events');\n      clearData(dataElm);\n      moveUp();\n      resetOnEmptySearch();\n      searchPhrase();\n    }\n  });\n  randomBtnElm.addEventListener('click', searchRandom);\n  inputElm.addEventListener('keyup', moveUp);\n  searchFormElm.addEventListener('submit', (e) => {\n    e.preventDefault();\n    return false; // to prevent changes in address bar\n  });\n  inputElm.addEventListener('keydown', (e) => {\n    // console.log(`input length=${inputElm.length} and ${dataElm.childNodes.length > 0}`)\n    if ((e.key === 'Backspace' && e.metaKey) ||\n        (!inputElm.length && dataElm.childNodes.length > 0)) {\n      // console.log('inside clearing phase on keyboard events');\n      clearData(dataElm);\n    }\n  });\n  inputElm.addEventListener('keyup', (e) => {\n    // console.log(`${e.key} is within not allowed symbols: ${keysNotAllowed.includes(e.key)}`);\n    if (!keysNotAllowed.includes(e.key)) {\n      resetOnEmptySearch();\n      delayFnOnInput();\n    }\n  });\n}());\n"],"sourceRoot":"/source/"}