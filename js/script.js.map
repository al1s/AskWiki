{"version":3,"sources":["script.js"],"names":["getWikiPageId","title","httpAddr","navigator","language","userLanguage","headers","Headers","preferedLang","then","json","append","Error","pageId","resp","data","warn","error","info","code","message","pageid","catch","err","Promise","reject","resolveLink","link","RegExp","exec","console","dataElm","innerHTML","parse","text","anchors","document","querySelectorAll","showPage","i","l","port","getWikiPage","fetch","stack","slideIn","elm","childNodes","timeoutArrIn","timeoutArrOut","item","ndx","arr","contains","forEach","a","setTimeout","shift","classList","remove","promises","clearTimeout","push","resolve","pop","add","b","showData","mediaBoxElm","createElement","titleElm","source","thumbnailWidth","thumbnail","width","mediaBoxContainerElm","imageElm","thumbnailSource","thumbnailHeight","appendChild","extractElm","extract","terms","description","addEventListener","phrase","query","search","ok","clearData","firstChild","pages","removeChild","result","formInput","replace","cleanInput","Object","searchWikiData","userInput","searchPhrase","inputElm","value","all","concat","_toConsumableArray","searchRandom","keys","delayMethod","log","cycle","t","context","callback","time","args","window","later","Date","timeout","label","func","apply","debounce","wait","_this","this","_arguments","arguments","submitBtnElm","randomBtnElm","delayFnOnInput","querySelector","e","target"],"mappings":"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","file":"script.js","sourcesContent":["// TODO: fix address bar - remove submit parameters from it;\n// TODO: clear the page if the input value is undefined;\n// TODO: Speed up the load and displaying the data;\n// TODO: Limit the keys to react at only to meaningful - letters and control;\n// TODO: + fix backspace to return a user to the previous page (now it just completely leave the page);\n// TODO: fix backspace when we switch from another resource to AskWiki by back or forward;\n// TODO: add initial fetch to establish connection with wiki; it seems to make following requests faster;\n// TODO: fix images size - it's too crane\n\nfunction getWikiPageId(title) {\n  const preferedLang = navigator.language || navigator.userLanguage;\n  const httpAddr = `https://${preferedLang}.wikipedia.org/w/api.php?action=query&format=json&titles=${title}&formatversion=2&origin=*`;\n  const headers = new Headers();\n  headers.append('Api-User-Agent', 'Example/1.0');\n  return fetch(httpAddr, { headers })\n    .then((resp) => {\n      if (resp.ok) return resp.json();\n      throw new Error(`Error while retrieving page with id ${pageId}`);\n    })\n    .then((data) => {\n      if (data.error) {\n        console.warn(data.error.info);\n        throw { code: data.error.code, message: data.error.info };\n      } else {\n        return data.query.pages[0].pageid \n      }\n    })\n    .catch(err => Promise.reject(err));\n}\n\nfunction resolveLink(link) {\n  const re = new RegExp(/.*\\/(.+)$/, 'g');\n  const title = re.exec(link)[0];\n  console.log(title);\n  const pageId = getWikiPageId(title).then(data => {return data});\n  return pageId\n}\n\n// showPage adds a page content to a given DOM element.\n// It replaces all relative links in the page with Wikipedia domain prefixed.\nfunction showPage(data, dataElm) {\n  const preferedLang = navigator.language || navigator.userLanguage;\n  dataElm.innerHTML = data.parse.text['*'] || data.parse.text;\n  const anchors = document.querySelectorAll('a');\n\n  for (let i = 0, l = anchors.length; i < l; i++) {\n    // console.log(anchors[i]);\n    if (/wiki|w/g.test(anchors[i].pathname)) {\n      anchors[i].host = `${preferedLang}.wikipedia.org`;\n      anchors[i].port = 443;\n      // console.log(resolveLink(anchors[i]))\n    }\n  }\n}\n\n// getWikiPage retrieves wiki page with a given pageID content from Wikimedia engine.\n// It uses browser settings to retrieve data according to user prefered language. \nfunction getWikiPage(pageId) {\n  const preferedLang = navigator.language || navigator.userLanguage;\n  const httpAddr = `https://${preferedLang}.wikipedia.org/w/api.php?action=parse&format=json&formatversion=2&pageid=${pageId}&origin=*`;\n  const headers = new Headers();\n  headers.append('Api-User-Agent', 'Example/1.0');\n  fetch(httpAddr, { headers })\n    .then((resp) => {\n      if (resp.ok) return resp.json();\n      throw new Error(`Error while retrieving page with id ${pageId}`);\n    })\n    .then((data) => {\n      if (data.error) {\n        console.warn(data.error.info);\n        throw { code: data.error.code, message: data.error.info };\n      } else {\n        const dataElm = document.querySelector('.external__data');\n        showPage(data, dataElm);\n      }\n    })\n    .catch(err => console.error(`${err.code || ''} ${err.message} ${err.stack})`))\n}\n\n// slideIn used for visual effect of sliding elements from top to appear\n// and to bottom to disappear.\n// Uses parent element as a parameter and do the magic on all childelements\nfunction slideIn(elm) {\n  if (elm.childNodes) {\n    const timeoutArrIn = [];\n    const timeoutArrOut = [];\n    const promises = [];\n    elm.childNodes.forEach((item, ndx, arr) => {\n      // console.log(item.classList);\n      if (item.classList.contains('--slide-from-top')) {\n        // console.log(`slideIn:, cycle=${cycle}, move '${item.firstChild.innerHTML}' from top`);\n        promises[ndx] = new Promise((resolve, reject) => {\n          const a = setTimeout(() => {\n            clearTimeout(timeoutArrOut.shift());\n            item.classList.remove('--slide-from-top');\n            resolve('Ok');\n          }, (ndx) * 30);\n          timeoutArrOut.push(a);\n        });\n      } else {\n        // console.log(`slideIn:, cycle=${cycle}, move '${item.firstChild.innerHTML}' to bottom`);\n        promises[ndx] = new Promise((resolve, reject) => {\n          const a = setTimeout(() => {\n            clearTimeout(timeoutArrIn.pop());\n            item.classList.add('--slide-to-bottom');\n            const b = setTimeout(() => {\n              clearTimeout(b);\n              item.classList.remove('--slide-to-bottom');\n            }, 300);\n            resolve('Ok');\n          }, (arr.length - ndx) * 10);\n          timeoutArrIn.push(a);\n        });\n      }\n    });\n    return promises;\n  }\n}\n// showData takes the data received from Wikipedia search engine\n// and insert it into given DOM element. \n// It expects 'data' object to consist:\n//    pageID - wiki page id;\n//    title - page title;\n//    thumbnail - title picture of the page;\n//    description - short extract from the article;\nfunction showData(data, dataElm) {\n  const pageId = data.pageid;\n  const title = data.title;\n  const mediaBoxElm = document.createElement('div');\n  const titleElm = document.createElement('h2');\n  titleElm.innerHTML = title;\n  titleElm.classList.add('media-box__title');\n  mediaBoxElm.appendChild(titleElm);\n\n  const mediaBoxContainerElm = document.createElement('div');\n  if (data.thumbnail) {\n    const thumbnailSource = data.thumbnail.source;\n    const thumbnailWidth = data.thumbnail.width;\n    const thumbnailHeight = data.thumbnail.height;\n    const imageElm = document.createElement('img');\n    imageElm.src = thumbnailSource;\n    imageElm.height = thumbnailHeight;\n    imageElm.width = thumbnailWidth;\n    imageElm.classList.add('media-box__image');\n    mediaBoxContainerElm.appendChild(imageElm);\n  }\n\n  if (data.terms) {\n    const extract = data.terms.description[0];\n    const extractElm = document.createElement('p');\n    extractElm.innerHTML = extract;\n    extractElm.classList.add('media-box__text');\n    mediaBoxContainerElm.appendChild(extractElm);\n  }\n\n  mediaBoxElm.classList.add('media-box');\n  mediaBoxElm.classList.add('--slide-from-top');\n  mediaBoxContainerElm.classList.add('media-box__container');\n\n  mediaBoxElm.appendChild(mediaBoxContainerElm);\n  dataElm.appendChild(mediaBoxElm);\n\n  mediaBoxElm.addEventListener('click', () => {\n    getWikiPage(pageId);\n  });\n}\n\nfunction searchWikiData(phrase) {\n  const preferedLang = navigator.language || navigator.userLanguage;\n  // let httpAddr = `https://${preferedLang}.wikipedia.org/w/api.php?action=query&format=json&prop=extracts%7Cpageimages%7Crevisions&titles=${phrase}&redirects=1&formatversion=2&exsentences=2&exintro=1&explaintext=1&piprop=thumbnail&pithumbsize=300&rvprop=timestamp&origin=*`;\n  // let httpAddr = `https://${preferedLang}.wikipedia.org/w/api.php?action=query&format=json&uselang=user&prop=extracts%7Cpageimages&list=search&redirects=1&formatversion=2&exsentences=2&exintro=1&explaintext=1&piprop=thumbnail&pithumbsize=300&piprop=thumbnail&pithumbsize=300&srsearch=${phrase}&srlimit=10&origin=*`;\n  //   let httpAddr = `https://${preferedLang}.wikipedia.org/w/api.php?\n  //       action=query&\n  //       format=json&\n  //       uselang=user&\n  //       prop=pageimages%7Cextracts&list=&\n  //       generator=search&\n  //       redirects=1&\n  //       formatversion=2&\n  //       piprop=thumbnail&\n  //       pithumbsize=300&\n  //       exsentences=2&\n  //       exintro=1&\n  //       explaintext=1&\n  //       gsrsearch=${phrase}&\n  //       origin=*`;\n  const httpAddr = `https://${preferedLang}.wikipedia.org/w/api.php?\n      action=query&\n      format=json&\n      generator=prefixsearch&\n      prop=pageprops%7Cpageimages%7Cpageterms&\n      redirects=&\n      ppprop=displaytitle&\n      piprop=thumbnail&\n      pithumbsize=80&\n      pilimit=6&\n      wbptterms=description&\n      gpssearch=${phrase}&\n      gpsnamespace=0&\n      gpslimit=6&\n      origin=*`;\n  const headers = new Headers();\n  headers.append('Api-User-Agent', 'Example/1.0');\n  return fetch(httpAddr, { headers })\n    .then((resp) => {\n      console.log(`fetched data for cycle=${cycle}`);\n      if (resp.ok) return resp.json();\n      throw new Error(`Could not get the Wikipage for ${phrase}!`);\n    })\n    .then((data) => {\n      if (data.error) {\n        console.warn(data.error.info);\n        throw new Error({ code: data.error.code, message: data.error.info });\n      } else if (!data.query || !data.query.pages) {\n        console.warn(data.query);\n        throw new Error({ code: 'NoSuchPage', message: `There is no pages for ${phrase}` });\n      } else {\n        return data.query.pages || data.query.search;\n      }\n    })\n    .catch(err => Promise.reject(err));\n}\n\nfunction clearData(dataElm) {\n  while (dataElm.firstChild) {\n    // console.log(`removal: cycle=${cycle}, elm is ${dataElm.firstChild.firstChild.innerHTML}`);\n    (dataElm.removeChild(dataElm.firstChild));\n  }\n}\n\nfunction cleanInput(formInput) {\n  const result = formInput.replace(/([.,;:=+[\\]\\\\|\\/?<>!@#$%\\^\\&*()'\"\\n\\r])/g, '');\n  // twitter's unicode letters and marks regexp\n  // from here - https://github.com/twitter/twitter-text/blob/master/js/twitter-text.js\n  // const bmpLetterAndMarks = new RegExp(/A-Za-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0300-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u0483-\\u052f\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0610-\\u061a\\u0620-\\u065f\\u066e-\\u06d3\\u06d5-\\u06dc\\u06df-\\u06e8\\u06ea-\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710-\\u074a\\u074d-\\u07b1\\u07ca-\\u07f5\\u07fa\\u0800-\\u082d\\u0840-\\u085b\\u08a0-\\u08b2\\u08e4-\\u0963\\u0971-\\u0983\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bc-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09ce\\u09d7\\u09dc\\u09dd\\u09df-\\u09e3\\u09f0\\u09f1\\u0a01-\\u0a03\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a59-\\u0a5c\\u0a5e\\u0a70-\\u0a75\\u0a81-\\u0a83\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abc-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ad0\\u0ae0-\\u0ae3\\u0b01-\\u0b03\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3c-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5c\\u0b5d\\u0b5f-\\u0b63\\u0b71\\u0b82\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd0\\u0bd7\\u0c00-\\u0c03\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c58\\u0c59\\u0c60-\\u0c63\\u0c81-\\u0c83\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbc-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0cde\\u0ce0-\\u0ce3\\u0cf1\\u0cf2\\u0d01-\\u0d03\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4e\\u0d57\\u0d60-\\u0d63\\u0d7a-\\u0d7f\\u0d82\\u0d83\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e01-\\u0e3a\\u0e40-\\u0e4e\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb9\\u0ebb-\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0ec8-\\u0ecd\\u0edc-\\u0edf\\u0f00\\u0f18\\u0f19\\u0f35\\u0f37\\u0f39\\u0f3e-\\u0f47\\u0f49-\\u0f6c\\u0f71-\\u0f84\\u0f86-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u103f\\u1050-\\u108f\\u109a-\\u109d\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u135d-\\u135f\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16f1-\\u16f8\\u1700-\\u170c\\u170e-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176c\\u176e-\\u1770\\u1772\\u1773\\u1780-\\u17d3\\u17d7\\u17dc\\u17dd\\u180b-\\u180d\\u1820-\\u1877\\u1880-\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1920-\\u192b\\u1930-\\u193b\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a1b\\u1a20-\\u1a5e\\u1a60-\\u1a7c\\u1a7f\\u1aa7\\u1ab0-\\u1abe\\u1b00-\\u1b4b\\u1b6b-\\u1b73\\u1b80-\\u1baf\\u1bba-\\u1bf3\\u1c00-\\u1c37\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1cd0-\\u1cd2\\u1cd4-\\u1cf6\\u1cf8\\u1cf9\\u1d00-\\u1df5\\u1dfc-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u20d0-\\u20f0\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2183\\u2184\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d7f-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2de0-\\u2dff\\u2e2f\\u3005\\u3006\\u302a-\\u302f\\u3031-\\u3035\\u303b\\u303c\\u3041-\\u3096\\u3099\\u309a\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua672\\ua674-\\ua67d\\ua67f-\\ua69d\\ua69f-\\ua6e5\\ua6f0\\ua6f1\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua7ad\\ua7b0\\ua7b1\\ua7f7-\\ua827\\ua840-\\ua873\\ua880-\\ua8c4\\ua8e0-\\ua8f7\\ua8fb\\ua90a-\\ua92d\\ua930-\\ua953\\ua960-\\ua97c\\ua980-\\ua9c0\\ua9cf\\ua9e0-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa36\\uaa40-\\uaa4d\\uaa60-\\uaa76\\uaa7a-\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaef\\uaaf2-\\uaaf6\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab5f\\uab64\\uab65\\uabc0-\\uabea\\uabec\\uabed\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf870-\\uf87f\\uf882\\uf884-\\uf89f\\uf8b8\\uf8c1-\\uf8d6\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe00-\\ufe0f\\ufe20-\\ufe2d\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc/, 'gui');\n  return result;\n}\n\nfunction searchPhrase() {\n  const userInput = cleanInput(inputElm.value);\n  // console.group(`Cycle_${cycle}`);\n  // console.log(`First slideIn, searchPhrase cleaning phase for cycle=${cycle}`);\n  Promise.all([searchWikiData(userInput), ...slideIn(dataElm)])\n    .then((data) => {\n      clearData(dataElm);\n      return data[0];\n    })\n    .then((data) => {\n      Object.keys(data).forEach((item) => {\n        showData(data[item], dataElm);\n      });\n    })\n    .then(() => {\n      console.log(`Second slideIn inside searchWikiData for cycle=${cycle}`);\n      slideIn(dataElm);\n    })\n  // console.groupEnd(`Cycle_${cycle}`);\n}\n\nfunction searchRandom() {\n\n}\n\n// delayMethod - delay function execution for a given period of time\n// here is used to wait for a user input interruption to get data by fetch().\n// source - https://stackoverflow.com/a/30503848/2255031\nfunction delayMethod(label, callback, time) {\n  if (typeof window.delayMethod === 'undefined') window.delayMethod = {};\n  delayMethod[label] = Date.now();\n  console.log(`${delayMethod[label]}`);\n  const t = delayMethod[label];\n  setTimeout(() => {\n    if (delayMethod[label] === t) callback();\n  }, time || 500);\n}\n\nfunction debounce(func, wait) {\n  let timeout;\n  return () => {\n    const context = this;\n    const args = arguments;\n    const later = () => {\n      timeout = null;\n      func.apply(context, args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n}\n\nconst submitBtnElm = document.querySelector('#searchBtnSubmit');\nconst randomBtnElm = document.querySelector('#searchBtnRandom');\nconst inputElm = document.querySelector('#searchInput');\nconst dataElm = document.querySelector('.external__data');\nlet cycle = 1;\nconst delayFnOnInput = debounce(searchPhrase, 250, false);\n\nsubmitBtnElm.addEventListener('click', searchPhrase);\nrandomBtnElm.addEventListener('click', searchRandom);\ninputElm.addEventListener('keyup', (e) => {\n  console.log(e.target.value);\n  delayFnOnInput();\n  cycle++;\n});\n"],"sourceRoot":"/source/"}